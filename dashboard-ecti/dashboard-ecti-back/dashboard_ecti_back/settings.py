"""
Django settings for dashboard_ecti_back project.

Generated by 'django-admin startproject' using Django 5.1.7.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""
import os
from pathlib import Path
import environ

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# charge les variables d’environnement

env = environ.Env()
environ.Env.read_env(BASE_DIR / ".env")

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = env(
    "DJANGO_SECRET_KEY",
    default="django-insecure-b61+g9dnr97hlhu5n+8ls=-yw!38r)d316eg*8tao72f(t()**",
)
# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ["127.0.0.1", "localhost"]


# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "corsheaders",
    "rest_framework",
    "api",
    
]


MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

CORS_ALLOW_ALL_ORIGINS = True

ROOT_URLCONF = 'dashboard_ecti_back.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'dashboard_ecti_back.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

COMMON_MYSQL = {
    "ENGINE": "django.db.backends.mysql",
    "USER":   env("DB_USER"),
    "PASSWORD": env("DB_PASSWORD"),
    "HOST":   env("DB_HOST"),
    "PORT":   env("DB_PORT", default="3306"),
    "OPTIONS": {"charset": "utf8mb4"},
}

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.sqlite3",
        "NAME": BASE_DIR / "django.sqlite3",
    },
    "ecti": {
        **COMMON_MYSQL,
        "NAME": env("DB_ECTI"),
    },
    # seconde base : infolocales
    "infolocales": {
        **COMMON_MYSQL,
        "NAME": env("DB_INFOLOCALES"),
        "HOST": env("DB_INFOLOCALES_HOST", default=COMMON_MYSQL["HOST"]),
        "USER": env("DB_INFOLOCALES_USER", default=COMMON_MYSQL["USER"]),
        "PASSWORD": env("DB_INFOLOCALES_PASSWORD", default=COMMON_MYSQL["PASSWORD"]),
    },

    # troisième base : tablecti
    "tablecti": {
        **COMMON_MYSQL,
        "NAME": env("DB_TABLECTI"),
        "HOST": env("DB_TABLECTI_HOST", default=COMMON_MYSQL["HOST"]),
        "USER": env("DB_TABLECTI_USER", default=COMMON_MYSQL["USER"]),
        "PASSWORD": env("DB_TABLECTI_PASSWORD", default=COMMON_MYSQL["PASSWORD"]),
    },

    # quatrième base : tstatic
    "tstatic": {
        **COMMON_MYSQL,
        "NAME": env("DB_TSTATIC"),
        "HOST": env("DB_TSTATIC_HOST", default=COMMON_MYSQL["HOST"]),
        "USER": env("DB_TSTATIC_USER", default=COMMON_MYSQL["USER"]),
        "PASSWORD": env("DB_TSTATIC_PASSWORD", default=COMMON_MYSQL["PASSWORD"]),
    },
}


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

REST_FRAMEWORK = {
    # on n'autorise plus que le JSONRenderer
    'DEFAULT_RENDERER_CLASSES': [
        'rest_framework.renderers.JSONRenderer',
    ],
    # (optionnel) vous pouvez aussi désactiver le parsers HTML
    'DEFAULT_PARSER_CLASSES': [
        'rest_framework.parsers.JSONParser',
    ],
}

DATABASE_ROUTERS = ["dashboard_ecti_back.database_router.ECTIRouter"]

from django.db.models.signals import post_migrate
from django.contrib.auth.management import create_permissions
from django.contrib.contenttypes.management import create_contenttypes

post_migrate.disconnect(create_permissions)
post_migrate.disconnect(create_contenttypes)